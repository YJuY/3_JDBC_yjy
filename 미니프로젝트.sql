
ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE;

CREATE USER mini_yjy IDENTIFIED BY mini1234;

GRANT CONNECT, RESOURCE, CREATE VIEW TO mini_yjy;

ALTER USER mini_yjy DEFAULT
TABLESPACE SYSTEM QUOTA UNLIMITED ON SYSTEM;

-- 예약 명단 테이블
CREATE TABLE "RESERVATION"(
	RES_NO DATE DEFAULT SYSDATE PRIMARY KEY ,--예약번호
	RES_NM VARCHAR2(30) NOT NULL,--예약 이름
	RES_DATE VARCHAR2(30) NOT NULL,--예약 날짜
	RES_TIME VARCHAR2(10) NOT NULL,--예약 시간
	RES_NUMOF NUMBER(10) NOT NULL,-- 예약인원
	RES_CANCEL CHAR(1) DEFAULT 'N' CHECK(RES_CANCEL IN ('Y', 'N'))--예약 취소
);

COMMENT ON COLUMN  "RESERVATION".RES_NO IS '예약 번호';
COMMENT ON COLUMN  "RESERVATION".RES_NM IS '예약자 이름';
COMMENT ON COLUMN  "RESERVATION".RES_DATE IS '예약 날짜';
COMMENT ON COLUMN  "RESERVATION".RES_TIME IS '예약 시간';
COMMENT ON COLUMN  "RESERVATION".RES_NUMOF IS '예약 인원';
COMMENT ON COLUMN  "RESERVATION".RES_CANCEL IS '예약 취소 여부(Y/N)';

CREATE SEQUENCE SEQ_RES_NO
START WITH 1
INCREMENT BY 1
NOCYCLE
NOCACHE;

INSERT INTO "RESERVATION"
VALUES(DEFAULT||SEQ_RES_NO.NEXTVAL, '홍길동', '9월 27일', '3시', '4', DEFAULT);



SELECT * FROM RESERVATION;

DROP TABLE "MENU";

ROLLBACK;


INSERT INTO "RESERVATION"


ALTER TABLE "RESERVATION" ADD RES_PHON VARCHAR2(20) DEFAULT ' ' NOT NULL;



UPDATE "RESERVATION" SET
RES_CANCEL = 'Y'
WHERE RES_NO = 15




COMMIT;
SELECT * FROM RESERVATION;

ALTER TABLE "RESERVATION" MODIFY []


CREATE TABLE "RESERVATION"(
	RES_NO DATE DEFAULT SYSDATE PRIMARY KEY ,--예약번호
	RES_NM VARCHAR2(30) NOT NULL,--예약 이름
	RES_DATE VARCHAR2(30) NOT NULL,--예약 날짜
	RES_TIME VARCHAR2(10) NOT NULL,--예약 시간
	RES_NUMOF NUMBER(10) NOT NULL,-- 예약인원
	RES_CANCEL CHAR(1) DEFAULT 'N' CHECK(RES_CANCEL IN ('Y', 'N'))--예약 취소
);
SELECT MENU_NM, MENU_PRICE
		FROM MENU;
-- 메뉴테이블
CREATE TABLE "MENU"(
	MENU_NO NUMBER NOT NULL PRIMARY KEY,
	MENU_NM VARCHAR2(40) NOT NULL,
	MENU_PRICE VARCHAR2(20) NOT NULL
	
);
SELECT *FROM menu;

COMMENT ON COLUMN "MENU".MENU_NO IS '메뉴 번호';
COMMENT ON COLUMN "MENU".MENU_NM IS '메뉴 이름';
COMMENT ON COLUMN "MENU".MENU_PRICE IS '메뉴 가격';

-- 메뉴번호 시퀀스 생성
CREATE SEQUENCE SEQ_MENU_NO
START WITH 1
INCREMENT BY 1
NOCYCLE 
NOCACHE;

-- 메뉴 INSERT 구문 작성 해야함
INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '치즈 떡볶이', '6,000');

INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '해물 떡볶이', '6,000');

INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '불고기 떡볶이', '6,000');

INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '부대 떡볶이', '6,000');

INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '야채 떡볶이', '6,000');

INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '궁중 떡볶이', '6,000');

INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '짜장 떡볶이', '6,000');

INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '볶음밥', '2,000');

INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '라면', '1,000');

INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '오뎅', '1,000');

INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '고기만두', '1,000');

INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '순대사리', '4,000');

INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '못난이만두', '1,000');

INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '야끼만두', '1,000');


COMMIT;

ROLLBACK;
-- 리뷰 테이블
CREATE TABLE "REVIEW"(
	REVIEW_NO NUMBER PRIMARY KEY,
	REVIEW_SCORE NUMBER NOT NULL,
	REVIEW_CONTENTS VARCHAR2(900) DEFAULT '" "',
	REVIEW_DATE DATE DEFAULT SYSDATE
);

COMMENT ON COLUMN "REVIEW".REVIEW_NO IS '리뷰 번호';
COMMENT ON COLUMN "REVIEW".REVIEW_SCORE IS '리뷰 점수';
COMMENT ON COLUMN "REVIEW".REVIEW_CONTENTS IS '리뷰 내용';
COMMENT ON COLUMN "REVIEW".REVIEW_DATE IS '리뷰 작성일';

-- 리뷰 시퀀스 생성
CREATE SEQUENCE SEQ_REVIEW_NO NOCACHE;

-- 데이터 삽입 해야함
INSERT INTO "REVIEW"
VALUES(SEQ_REVIEW_NO.NEXTvAL, 5, '리뷰 샘플 1번', DEFAULT);

INSERT INTO "REVIEW"
VALUES(SEQ_REVIEW_NO.NEXTvAL, 4, '리뷰 샘플 2번', DEFAULT);

INSERT INTO "REVIEW"
VALUES(SEQ_REVIEW_NO.NEXTvAL, 3, '리뷰 샘플 3번', DEFAULT);

INSERT INTO "REVIEW"
VALUES(SEQ_REVIEW_NO.NEXTvAL, 4, '리뷰 샘플 4번', DEFAULT);

INSERT INTO "REVIEW"
VALUES(SEQ_REVIEW_NO.NEXTvAL, 4, '리뷰 샘플 4번', '리뷰 샘플 글작성1번');

INSERT INTO "REVIEW"
VALUES(SEQ_REVIEW_NO.NEXTvAL, 4, '리뷰 샘플 4번', '리뷰 샘플 글작성2번');


-- 메뉴판 조회 slq
SELECT MENU_NO, MENU_NM, MENU_PRICE
FROM MENU;
-- 리뷰 보기 SQL
SELECT REVIEW_SCORE, REVIEW_CONTENTS, REVIEW_DATE
FROM REVIEW


COMMIT;

SELECT ROUND(avg(REVIEW_SCORE),1)
FROM REVIEW;




SELECT REVIEW_SCORE, REVIEW_CONTENTS, REVIEW_DATE, ROUND(AVG(REVIEW_SCORE),1) AVG_SCORE
		FROM REVIEW
	GROUP BY REVIEW_SCORE, REVIEW_CONTENTS, REVIEW_DATE;


ALTER TABLE REVIEW ADD RES_NO NUMBER;

ALTER TABLE REVIEW ADD FOREIGN KEY(RES_NO) REFERENCES RESERVATION(RES_NO);





SELECT * FROM REVIEW;


SELECT * FROM "RESERVATION";









